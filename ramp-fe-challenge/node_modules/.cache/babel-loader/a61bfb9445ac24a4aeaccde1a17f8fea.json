{"ast":null,"code":"var _jsxFileName = \"/Users/ayushpant/Downloads/ramp-fe-challenge/src/components/InputSelect/index.tsx\",\n    _s = $RefreshSig$();\n\nimport Downshift from \"downshift\";\nimport { useCallback, useEffect, useState, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function InputSelect(_ref) {\n  _s();\n\n  let {\n    label,\n    defaultValue,\n    onChange: consumerOnChange,\n    items,\n    parseItem,\n    isLoading,\n    loadingLabel\n  } = _ref;\n  const [selectedValue, setSelectedValue] = useState(defaultValue !== null && defaultValue !== void 0 ? defaultValue : null);\n  const [dropdownPosition, setDropdownPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const inputRef = useRef(null); // useRef to reference the input element\n\n  const onChange = useCallback(selectedItem => {\n    if (selectedItem === null) {\n      return;\n    }\n\n    consumerOnChange(selectedItem);\n    setSelectedValue(selectedItem);\n  }, [consumerOnChange]);\n  const updateDropdownPosition = useCallback(() => {\n    if (inputRef.current instanceof Element) {\n      const newPosition = getDropdownPosition(inputRef.current);\n      setDropdownPosition(newPosition);\n    }\n  }, []);\n  useEffect(() => {\n    const handleScroll = () => {\n      updateDropdownPosition();\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    window.addEventListener('resize', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('resize', handleScroll);\n    };\n  }, [updateDropdownPosition]);\n  return /*#__PURE__*/_jsxDEV(Downshift, {\n    id: \"RampSelect\",\n    onChange: onChange,\n    selectedItem: selectedValue,\n    itemToString: item => item ? parseItem(item).label : \"\",\n    children: _ref2 => {\n      let {\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue\n      } = _ref2;\n      const toggleProps = getToggleButtonProps();\n      const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampInputSelect--root\",\n        ref: inputRef,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"RampText--s RampText--hushed\",\n          ...getLabelProps(),\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampBreak--xs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"RampInputSelect--input\",\n          ...toggleProps,\n          onClick: event => {\n            updateDropdownPosition();\n            toggleProps.onClick && toggleProps.onClick(event);\n          },\n          children: inputValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classNames(\"RampInputSelect--dropdown-container\", {\n            \"RampInputSelect--dropdown-container-opened\": isOpen\n          }),\n          ...getMenuProps(),\n          style: {\n            position: 'absolute',\n            top: dropdownPosition.top,\n            left: dropdownPosition.left\n          },\n          children: isOpen && (isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: [loadingLabel, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 39\n          }, this) : items.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"RampInputSelect--dropdown-item\",\n            children: \"No items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 134\n          }, this) : items.map((item, index) => {\n            const parsedItem = parseItem(item);\n            return /*#__PURE__*/_jsxDEV(\"div\", { ...getItemProps({\n                key: parsedItem.value,\n                index,\n                item,\n                className: classNames(\"RampInputSelect--dropdown-item\", {\n                  \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                  \"RampInputSelect--dropdown-item-selected\": (parsedSelectedItem === null || parsedSelectedItem === void 0 ? void 0 : parsedSelectedItem.value) === parsedItem.value\n                })\n              }),\n              children: parsedItem.label\n            }, parsedItem.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InputSelect, \"NV3zMmmkEOeX9iMiJflRCnyE8z8=\");\n\n_c = InputSelect;\n\nconst getDropdownPosition = target => {\n  if (target instanceof Element) {\n    const {\n      top,\n      left\n    } = target.getBoundingClientRect();\n    const {\n      scrollY\n    } = window;\n    return {\n      top: 0,\n      // You might need to adjust this value\n      left\n    };\n  }\n\n  return {\n    top: 0,\n    left: 0\n  };\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"InputSelect\");","map":{"version":3,"names":["Downshift","useCallback","useEffect","useState","useRef","classNames","InputSelect","label","defaultValue","onChange","consumerOnChange","items","parseItem","isLoading","loadingLabel","selectedValue","setSelectedValue","dropdownPosition","setDropdownPosition","top","left","inputRef","selectedItem","updateDropdownPosition","current","Element","newPosition","getDropdownPosition","handleScroll","window","addEventListener","removeEventListener","item","getItemProps","getLabelProps","getMenuProps","isOpen","highlightedIndex","getToggleButtonProps","inputValue","toggleProps","parsedSelectedItem","event","onClick","position","length","map","index","parsedItem","key","value","className","target","getBoundingClientRect","scrollY"],"sources":["/Users/ayushpant/Downloads/ramp-fe-challenge/src/components/InputSelect/index.tsx"],"sourcesContent":["import Downshift from \"downshift\";\nimport { useCallback, useEffect, useState, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport { DropdownPosition, GetDropdownPositionFn, InputSelectOnChange, InputSelectProps } from \"./types\";\n\nexport function InputSelect<TItem>({\n  label,\n  defaultValue,\n  onChange: consumerOnChange,\n  items,\n  parseItem,\n  isLoading,\n  loadingLabel,\n}: InputSelectProps<TItem>) {\n  const [selectedValue, setSelectedValue] = useState<TItem | null>(defaultValue ?? null);\n  const [dropdownPosition, setDropdownPosition] = useState<DropdownPosition>({ top: 0, left: 0 });\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // useRef to reference the input element\n\n  const onChange = useCallback<InputSelectOnChange<TItem>>(\n    (selectedItem) => {\n      if (selectedItem === null) {\n        return;\n      }\n\n      consumerOnChange(selectedItem);\n      setSelectedValue(selectedItem);\n    },\n    [consumerOnChange]\n  );\n\n  const updateDropdownPosition = useCallback(() => {\n    if (inputRef.current instanceof Element) {\n      const newPosition = getDropdownPosition(inputRef.current);\n      setDropdownPosition(newPosition);\n    }\n  }, []);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      updateDropdownPosition();\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    window.addEventListener('resize', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('resize', handleScroll);\n    };\n  }, [updateDropdownPosition]);\n\n  return (\n    <Downshift<TItem>\n      id=\"RampSelect\"\n      onChange={onChange}\n      selectedItem={selectedValue}\n      itemToString={(item) => (item ? parseItem(item).label : \"\")}\n    >\n      {({\n        getItemProps,\n        getLabelProps,\n        getMenuProps,\n        isOpen,\n        highlightedIndex,\n        selectedItem,\n        getToggleButtonProps,\n        inputValue,\n      }) => {\n        const toggleProps = getToggleButtonProps();\n        const parsedSelectedItem = selectedItem === null ? null : parseItem(selectedItem);\n\n        return (\n          <div className=\"RampInputSelect--root\" ref={inputRef}>\n            <label className=\"RampText--s RampText--hushed\" {...getLabelProps()}>\n              {label}\n            </label>\n            <div className=\"RampBreak--xs\" />\n            <div\n              className=\"RampInputSelect--input\"\n              {...toggleProps}\n              onClick={(event) => {\n                updateDropdownPosition();\n                toggleProps.onClick && toggleProps.onClick(event);\n              }}\n            >\n              {inputValue}\n            </div>\n\n            <div\n              className={classNames(\"RampInputSelect--dropdown-container\", {\n                \"RampInputSelect--dropdown-container-opened\": isOpen,\n              })}\n              {...getMenuProps()}\n              style={{ position: 'absolute', top: dropdownPosition.top, left: dropdownPosition.left }}\n            >\n              {isOpen && (isLoading ? <div className=\"RampInputSelect--dropdown-item\">{loadingLabel}...</div> : items.length === 0 ? <div className=\"RampInputSelect--dropdown-item\">No items</div> : items.map((item, index) => {\n                  const parsedItem = parseItem(item);\n                  return (\n                    <div\n                      key={parsedItem.value}\n                      {...getItemProps({\n                        key: parsedItem.value,\n                        index,\n                        item,\n                        className: classNames(\"RampInputSelect--dropdown-item\", {\n                          \"RampInputSelect--dropdown-item-highlighted\": highlightedIndex === index,\n                          \"RampInputSelect--dropdown-item-selected\": parsedSelectedItem?.value === parsedItem.value,\n                        }),\n                      })}\n                    >\n                      {parsedItem.label}\n                    </div>\n                  );\n                }))}\n            </div>\n          </div>\n        );\n      }}\n    </Downshift>\n  );\n}\n\nconst getDropdownPosition: GetDropdownPositionFn = (target) => {\n  if (target instanceof Element) {\n    const { top, left } = target.getBoundingClientRect();\n    const { scrollY } = window;\n    return {\n      top: 0, // You might need to adjust this value\n      left,\n    };\n  }\n  return { top: 0, left: 0 };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}